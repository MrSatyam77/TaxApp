importScripts("dist/offline-lib-import.js"),importScripts("dist/offline-src-import.js");var cacheList={},whitelistedSubdomains={app:{domain:"https://app.advanced-taxsolutions.com"},"static":{domain:"https://static.advanced-taxsolutions.com"},api:{domain:"https://api.advanced-taxsolutions.com"}},ignoreUrlParametersMatching=[/^TS/],_apiForCache=utils.apiForCache,_apiForQueue=utils.apiForQueue,_apiForCacheOptions=utils.apiForCacheOptions,_excludeAPIFromCache=utils.excludeAPIFromCache,_apiOnlineResponseFunctions=utils.apiOnlineResponseFunctions,_apiOnlineRequestFunctions=utils.apiOnlineRequestFunctions,_xsrfToken="",_defaultLocationId="",_resellerId="RE-4dc601df-dc0e-4a7a-857d-9493ba33a223",_taxYear="2015",_isReturnPreCacheChecked=!0,_prefixToQueueRequest="queue_request_",_deletedStaticCacheList=[],_returnPreCachingDealy=100,_timeOutAfterEvreySloat=100,_itemsPerSloatForStatic=15,_itemsPerSloatForApp=75,_isAppCacheRunning=!1,_isDownloadCacheListCalled=!1;toolbox.options.debug=!1;var _deleteOldCache=function(){return new Promise(function(e,t){var n=Object.keys(cacheList).map(function(e){return cacheList[e].key});caches.keys().then(function(t){Promise.all(t.map(function(e){-1==n.indexOf(e)&&-1==e.indexOf("$")&&0==_isAppCacheRunning&&(-1!=e.indexOf("app-v")?(console.log("Delete out of date cache: ",e),caches["delete"](e),_executeWhenClientConnected(function(){_sendMessageToClient("staticVersionUpdatingStart",{})}),preCacheFiles("app","/offline/cacheList.json").then(function(){_executeWhenClientConnected(function(){_sendMessageToClient("staticVersionUpdatingFinish",{}),_sendMessageToClient("appVersionUpdated",{})})})):(console.log("Delete out of date cache: ",e),-1!=e.indexOf("api-v")?caches["delete"](e):(caches["delete"](e),_deletedStaticCacheList.push(e))))})).then(function(){e()})})})},_downloadCacheList=function(){return new Promise(function(e,t){console.log("Download CacheList Called"),1==_isDownloadCacheListCalled?(console.log("Downloading of cachelist is already in process"),e()):(_isDownloadCacheListCalled=!0,console.log("Download cachelist from network"),utils.loadJSONFile(whitelistedSubdomains["static"].domain+"/cacheVersions.json").then(function(n){if(void 0!=n&&void 0!=n.cacheList){if(void 0!=cacheList&&Object.keys(cacheList).length>0)for(var a in n.cacheList)n.cacheList.hasOwnProperty(a)&&void 0!=cacheList[a]&&void 0!=cacheList[a].preCache&&cacheList[a].preCache===!0&&(n.cacheList[a].preCache=!0);cacheList=n.cacheList,db.updateDoc("cacheList",utils.cloneObject(cacheList)).then(function(e){}),_isDownloadCacheListCalled=!1,e()}else _isDownloadCacheListCalled=!1,t("cacheList is undefined")})["catch"](function(e){_isDownloadCacheListCalled=!1,console.log("Something goes wrong in downloading cacheList"),console.error(e),t(e)}))})},_analyzeCacheList=function(){return new Promise(function(e,t){_deleteOldCache().then(function(t){if(void 0!=_deletedStaticCacheList&&_deletedStaticCacheList.length>0){_executeWhenClientConnected(function(){_sendMessageToClient("staticVersionUpdatingStart",{})});for(var n in _deletedStaticCacheList){var a=_deletedStaticCacheList[n].split("-"),i=(a[0]+"-"+a[1]).toUpperCase();cacheList[i].preCache===!0&&(cacheList[i].preCacheInProcess=!0)}_executeWhenClientConnected(function(){_sendMessageToClient("getCacheListAndUpdateStatus",{})}),preCacheStaticFiles(_deletedStaticCacheList,function(t){_executeWhenClientConnected(function(){_sendMessageToClient("staticVersionUpdatingFinish",{})}),_executeWhenClientConnected(function(){_sendMessageToClient("getCacheListAndUpdateStatus",{})}),e()},function(t){_executeWhenClientConnected(function(){_sendMessageToClient("staticVersionUpdatingFinish",{})}),_executeWhenClientConnected(function(){_sendMessageToClient("getCacheListAndUpdateStatus",{})}),e()})}else 1==_isAppCacheRunning||e()})["catch"](function(t){console.error(t),e()})})},preCacheStaticFiles=function(e,t){if(0==e.length)t();else{var n=e.shift(),a=n.split("-"),i={year:a[1],state:a[0]},c=utils.prepareURLForStatic(whitelistedSubdomains["static"].domain,i),o=(i.state+"-"+i.year).toUpperCase();void 0!=cacheList[o]&&void 0!=cacheList[o].preCache&&cacheList[o].preCache===!0&&preCacheFiles(o,c).then(function(n){cacheList[o].preCacheInProcess=!1,preCacheStaticFiles(e,t)})["catch"](function(n){cacheList[o].preCacheInProcess=!1,preCacheStaticFiles(e,t)})}},_getCacheList=function(){return new Promise(function(e,t){Object.keys(cacheList).length>0?e():(console.log("Getting from db"),db.getDoc("cacheList").then(function(n){void 0!=n?(cacheList=utils.cloneObject(n),e()):_downloadCacheList().then(function(){e()})["catch"](function(){t()})})["catch"](function(){_downloadCacheList().then(function(){e()})["catch"](function(){t()})}))})},_preCacheInSlot=function(e,t,n,a,i){if(0==e.length)a();else{var c;c=e.length<=t?e.splice(0,e.length):e.splice(0,t),caches.open(cacheList[n].key).then(function(o){o.addAll(c).then(function(){setTimeout(function(){_preCacheInSlot(e,t,n,a,i)},_timeOutAfterEvreySloat)},function(e){console.error(e),i()})})}},preCacheFiles=function(e,t){return"app"===e&&(_isAppCacheRunning=!0),new Promise(function(n,a){utils.loadJSONFile(t).then(function(t){if(void 0!=t&&void 0!=t.list){var i=void 0==whitelistedSubdomains[e]?"static":e;for(var c in t.list)t.list[c]=whitelistedSubdomains[i].domain+t.list[c];var o="app"===e?_itemsPerSloatForApp:_itemsPerSloatForStatic;_preCacheInSlot(t.list,o,e,function(){"app"===e&&(_isAppCacheRunning=!1),cacheList[e].preCache=!0,n()},function(t){"app"===e&&(_isAppCacheRunning=!1),cacheList[e].preCache=!1,console.error(t),a()})}},function(t){"app"===e&&(_isAppCacheRunning=!1),console.error(t),a()})})},appRequestHandler=function(e,t,n){return Object.keys(cacheList).length>0?(n=utils.setOptions(n,cacheList.app.key),toolbox.cacheFirst(e,t,n)["catch"](function(){})):void _getCacheList().then(function(){return n=utils.setOptions(n,cacheList.app.key),toolbox.cacheFirst(e,t,n)["catch"](function(){})})["catch"](function(e){console.error(e)})},staticRequestHandler=function(e,t,n){if(Object.keys(cacheList).length>0){var a;return void 0!=cacheList[utils.getStaticCacheNameUsingURL(e.url)]&&(a=cacheList[utils.getStaticCacheNameUsingURL(e.url)].key),a=void 0==a?cacheList.OtherStatic.key:a,caches.open(a).then(function(t){return t.match(e).then(function(n){if(n)return n;var a=e.clone();return fetch(a).then(function(n){if(!n||200!==n.status)return n;var a=n.clone();return t.put(e,a),n})})["catch"](function(e){console.log("Error in static caching"),console.error(e)})})}},apiRequestHandler=function(e,t,n){console.info("Request for POST : "+e.url);var a=utils.stripIgnoredUrlParameters(e.url.toString(),ignoreUrlParametersMatching),i=a.replace(whitelistedSubdomains.api.domain,""),c=e.clone();return fetch(e).then(function(t){if(_xsrfToken=t.headers.get("xsrf-token"),void 0==t||200!==t.status)return t;if(void 0==_defaultLocationId||""==_defaultLocationId||null==c.headers.get("X-Location")||null!=c.headers.get("X-Location")&&c.headers.get("X-Location")==_defaultLocationId){if(void 0!=_apiOnlineRequestFunctions[i]&&swFunctions[_apiOnlineRequestFunctions[i].functionToExecute](c),void 0!=_apiForQueue[a.replace(whitelistedSubdomains.api.domain,"")]&&void 0!=_apiForQueue[a.replace(whitelistedSubdomains.api.domain,"")].functionToExecute){var n=c.clone();n.json().then(function(e){swRequest.executeCleanUpFunction(a,e)})}return("GET"==e.method||-1!=_apiForCache.indexOf(i))&&_excludeAPIFromCache.indexOf(i)<0?swRequest.cacheResponse(t,a,c):t}return t},function(t){return("GET"==e.method||-1!=_apiForCache.indexOf(i))&&_excludeAPIFromCache.indexOf(i)<0?void 0!=_apiForCacheOptions[i]&&void 0!=_apiForCacheOptions[i].lookForProperty?c.json().then(function(e){return swRequest.responseFromCache(a+"_"+e[_apiForCacheOptions[i].lookForProperty],t)})["catch"](function(){return t}):swRequest.responseFromCache(a):void 0!=_apiForQueue[a.replace(whitelistedSubdomains.api.domain,"")]?swRequest.queueRequest(c,a,t):t})};toolbox.router.get("/(.*)",appRequestHandler,{origin:whitelistedSubdomains.app.domain}),toolbox.router.get("/(.*)",staticRequestHandler,{origin:whitelistedSubdomains["static"].domain}),toolbox.router.get("/(.*)",apiRequestHandler,{origin:whitelistedSubdomains.api.domain}),toolbox.router.post("/(.*)",apiRequestHandler,{origin:whitelistedSubdomains.api.domain});var _switchToOnline=function(){var e={};e.startkey=_prefixToQueueRequest,db.query(e).then(function(e){swRequest.processPendingRequestQueue(e,[],[],function(e,t,n){if(e)console.log("Error in processing queue"),console.error(e);else{if(n.length>0){console.log("Below Listed apis failed");for(var a in n)console.error(Error("Failed: "+n[a]))}t.length>0&&console.info("Queue Processed -----------------------------------------------------------")}})})},_executeWhenClientConnected=function(e){self.clients.matchAll().then(function(t){t.length>0?e():(console.info("Client Not Found, retry after 100 ms"),setTimeout(function(){_executeWhenClientConnected(e)},100))})},_sendMessageToClient=function(e,t){self.clients.matchAll().then(function(n){n.forEach(function(n){n.postMessage({command:e,data:t})})})},_cacheStates=function(e,t,n){if(0==e.length)n(t);else{var a,i,c=utils.copyObject(e.shift());void 0!=c.key&&"TEMPLATE"==c.key?(a=whitelistedSubdomains["static"].domain+"/template.json",i="TEMPLATE"):void 0!=c.key&&"LOOKUP-2015"==c.key?(a=whitelistedSubdomains["static"].domain+"/2015/cacheLists/lookup.json",i="LOOKUP-2015"):void 0!=c.key&&"DEFAULTS-2015"==c.key?(a=whitelistedSubdomains["static"].domain+"/2015/cacheLists/defaults.json",i="DEFAULTS-2015"):(a=utils.prepareURLForStatic(whitelistedSubdomains["static"].domain,c),i=(c.state+"-"+c.year).toUpperCase()),void 0!=cacheList[i]&&void 0!=cacheList[i].key?void 0!=cacheList[i].preCache&&cacheList[i].preCache===!0?(c.preCache=!0,cacheList[i].preCacheInProcess=!1,t.push(c),_cacheStates(e,t,n)):preCacheFiles(i,a).then(function(a){c.preCache=!0,cacheList[i].preCacheInProcess=!1,t.push(c),_cacheStates(e,t,n)})["catch"](function(a){c.preCache=!1,cacheList[i].preCacheInProcess=!1,t.push(c),_cacheStates(e,t,n)}):(c.preCache=!1,t.push(c),_cacheStates(e,t,n))}},_precacheStateList=function(e){if(void 0!=e&&void 0!=e.data&&void 0!=e.data.data){if(e.data.data.process.length>0){for(var t in e.data.data.process){var n=(e.data.data.process[t].state+"-"+e.data.data.process[t].year).toUpperCase();1!=cacheList[n].preCache&&(cacheList[n].preCacheInProcess=!0)}e.data.data.process.unshift({key:"TEMPLATE"},{key:"LOOKUP-2015"},{key:"DEFAULTS-2015"})}_executeWhenClientConnected(function(){_sendMessageToClient("staticVersionUpdatingStart",{}),_sendMessageToClient("getCacheListAndUpdateStatus",{})}),_cacheStates(e.data.data.process,[],function(t){if(_executeWhenClientConnected(function(){_sendMessageToClient("getCacheListAndUpdateStatus",{}),_sendMessageToClient("staticVersionUpdatingFinish",{})}),void 0!=e.data.data.cancel&&e.data.data.cancel.length>0)for(var n in e.data.data.cancel)if(e.data.data.cancel.hasOwnProperty(n)){var a=(e.data.data.cancel[n].state+"-"+e.data.data.cancel[n].year).toUpperCase();cacheList[a].preCache=!1}db.updateDoc("cacheList",utils.copyObject(cacheList)).then(function(n){e.ports[0].postMessage({success:"Cache Done",data:t,error:null})},function(n){console.log("Error while updating cacheList in db"),console.error(n),e.ports[0].postMessage({success:"Cache Done",data:t,error:null})})},function(t){_executeWhenClientConnected(function(){_sendMessageToClient("getCacheListAndUpdateStatus",{}),_sendMessageToClient("staticVersionUpdatingFinish",{})}),e.ports[0].postMessage({error:t})})}},_preCacheAppFiles=function(){return new Promise(function(e,t){0!=_isAppCacheRunning||void 0==cacheList.app||void 0!=cacheList.app.preCache&&0!=cacheList.app.preCache?e():(_executeWhenClientConnected(function(){_sendMessageToClient("staticVersionUpdatingStart",{})}),preCacheFiles("app","/offline/cacheList.json").then(function(t){_executeWhenClientConnected(function(){_sendMessageToClient("staticVersionUpdatingFinish",{})}),e()})["catch"](function(t){_executeWhenClientConnected(function(){_sendMessageToClient("staticVersionUpdatingFinish",{})}),e()}))})},_checkStatePrecacheStatus=function(e){if(void 0!=e&&void 0!=e.data&&void 0!=e.data.data&&e.data.data.length>0){for(var t in e.data.data)if(e.data.data.hasOwnProperty(t)){var n=(e.data.data[t].state+"-"+e.data.data[t].year).toUpperCase();void 0!=cacheList[n]&&void 0!=cacheList[n].preCache?e.data.data[t].preCache=cacheList[n].preCache:e.data.data[t].preCache=!1}e.ports[0].postMessage({success:"Success",data:e.data.data,error:null})}else e.ports[0].postMessage({error:"Data is undefined"})},_checkForCacheUpdate=function(e){_downloadCacheList().then(function(){_preCacheAppFiles().then(function(e){_analyzeCacheList().then(function(){console.log("Downloaded & Analyzed"),_executeWhenClientConnected(function(){_sendMessageToClient("precacheMissingStates",{})})})})})},_waitForFlagToChange=function(e,t,n){self[e]==t?n():setTimeout(function(){_waitForFlagToChange(e,t,n)},500)};self.addEventListener("install",function(e){console.log("serviceWorker Installed"),e.waitUntil(_getCacheList().then(function(){self.skipWaiting().then(function(){})})["catch"](function(e){console.log("Something goes wrong in pre caching cacheList"),console.error(e)}))},function(e){console.log("serviceWorker Registration Failed: "+e)}),self.addEventListener("activate",function(e){console.log("serviceWorker activated"),_getCacheList().then(function(){})}),self.addEventListener("message",function(e){switch(console.log("Handling Message Event "),e.data.command){case"precache":_precacheStateList(e);break;case"switchToOnline":_switchToOnline();break;case"setXSRFToken":_xsrfToken=e.data.xsrfToken;break;case"cacheList":_getCacheList().then(function(){e.ports[0].postMessage({success:"Success",data:cacheList,error:null})});break;case"checkStatePrecacheStatus":_checkStatePrecacheStatus(e);break;case"preCacheAppFiles":_preCacheAppFiles();break;case"checkForCacheUpdate":_checkForCacheUpdate(e);break;default:e.ports[0].postMessage({error:"Unkonwn Command"})}});